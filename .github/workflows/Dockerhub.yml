name: Deployment

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
env:
 DOCKER_IMAGE_NAME: myapp
 DOCKER_IMAGE_TAG: ${{ github.sha }}
 K8S_NAMESPACE: mynamespace
 K8S_DEPLOYMENT_NAME: myapp
 K8S_CONTAINER_NAME: myapp

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log out of Docker hub
        run: |
          docker logout

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          logout: false

      - name: Build Docker Compose
        run: |
          docker-compose build
          
      - name: Push Docker Compose
        run: |
          docker-compose push
          
      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          
      # Install kubectl
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
      
      # Login to Azure
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      # Update the deployment with the new Docker image
      - name: Update Kubernetes deployment
        run: |
          kubectl set image deployment/${{ env.K8S_DEPLOYMENT_NAME }} \
            ${env.K8S_CONTAINER_NAME}=${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }} \
            -n ${env.K8S_NAMESPACE}
          kubectl rollout status deployment/${{ env.K8S_DEPLOYMENT_NAME }} -n ${env.K8S_NAMESPACE}
